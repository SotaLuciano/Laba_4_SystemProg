<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>